{"version":3,"sources":["components/Box.js","components/List.js","components/User.js","components/Location.js","components/Machine.js","constants.js","components/TopBar.js","components/Login.js","components/Home.js","components/Main.js","App.js","index.js"],"names":["style","background","padding","Box","data","this","props","orientation","color","fontWeight","fontSize","gutter","length","sort","dat","machineType","map","className","span","backgroundColor","isAvailable","width","height","margin","display","justifyContent","alignItems","sn","Component","List","availableMachines","title","Item","label","User","user","columns","dataIndex","key","render","text","dataSource","EditableCell","editing","inputType","children","record","index","restProps","inputNode","name","rules","required","message","Location","formRef","React","createRef","edit","current","setFieldsValue","email","defaultRunningTime","defaultReservationExpireTime","defaultPickupTime","setState","editingKey","_id","isEditing","state","cancel","save","a","validateFields","row","newData","findIndex","item","splice","handleAdd","handleSave","console","log","fetch","headers","method","body","JSON","stringify","then","response","json","res","isSuccess","catch","err","handleDelete","count","filter","onAdd","id","location","editable","onConfirm","_","onClick","marginRight","disabled","mergedColumns","col","onCell","type","marginTop","marginBottom","ref","component","components","cell","bordered","rowKey","rowClassName","pagination","onChange","Machine","API_ROOT","TopBar","isLoggedIn","handleLogout","NormalLoginForm","handleSubmit","e","preventDefault","form","values","username","password","ok","Error","handleLoginSucceed","token","success","error","getFieldDecorator","onSubmit","prefix","placeholder","htmlType","Login","Form","create","Home","handleClick","selectedKeys","mode","icon","AppstoreOutlined","componentsSwitch","Main","getLogin","Redirect","to","getMachine","Switch","Route","path","App","Boolean","localStorage","getItem","setItem","removeItem","getMachineFromDb","machines","getUserFromDb","users","getLocationFromDb","locations","putDataToDB","deleteFromDB","idTodelete","updateDB","idToUpdate","updateToApply","ReactDOM","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.e7867d1c.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Row, Col, Divider } from 'antd';\r\nimport '../index.css';\r\nimport 'antd/dist/antd.css';\r\n\r\nconst style = { background: '#0092ff', padding: '8px 0' };\r\n\r\n\r\nclass Box extends Component{\r\n\r\n\r\n    render() {\r\n        const { data } = this.props;\r\n        return (\r\n            <>\r\n                <Divider orientation=\"middle\" style={{ color: '#333', fontWeight: 'normal',fontSize:30 }}>\r\n                    live status\r\n                </Divider>\r\n                <Row gutter={[16, 24]}>\r\n                    {data.length <= 0\r\n                        ? 'NO DB ENTRIES YET'\r\n                        : data.sort((dat)=>dat.machineType===\"washer\"?-1:1).map((dat) => (\r\n\r\n                            <Col className=\"gutter-row\" span={6}>\r\n                                <div style={\r\n                                    {...style,\r\n                                        backgroundColor:dat.isAvailable?'#98FB98':'#87CEFA',\r\n                                        color:'black',\r\n\r\n                                        width:300,\r\n                                        height:100,\r\n                                        margin:10,\r\n\r\n                                        display: 'flex',\r\n                                        justifyContent: 'center',\r\n                                        alignItems: 'center',\r\n\r\n                                        fontSize:20\r\n\r\n                                    }}> {dat.machineType+\" \"+dat.sn} </div>\r\n                            </Col>\r\n\r\n                        ))}\r\n\r\n\r\n                </Row>\r\n        </>\r\n        );\r\n\r\n    }\r\n\r\n}\r\nexport default Box;","import React, { Component } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Descriptions} from 'antd';\r\n\r\n\r\n\r\nclass List extends Component{\r\n\r\n\r\n    render() {\r\n        const { data } = this.props;\r\n        let availableMachines = 0;\r\n        data.map((dat) => {\r\n            if(dat.isAvailable) {\r\n                availableMachines += 1;\r\n            }\r\n            return null;\r\n            }\r\n        )\r\n\r\n        return (\r\n                <>\r\n                    <Descriptions title=\"Statistics\">\r\n                        <Descriptions.Item label=\"Washer & Dryer\">{data.length}</Descriptions.Item>\r\n                        <Descriptions.Item label=\"Available Machines\">{availableMachines}</Descriptions.Item>\r\n                    </Descriptions>,\r\n\r\n\r\n\r\n\r\n                </>\r\n\r\n            )\r\n\r\n\r\n    }\r\n\r\n}\r\nexport default List;","import React, {Component} from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Table, Tag, Space } from 'antd';\r\n\r\n\r\nclass User extends Component {\r\n\r\n\r\n\r\n    render() {\r\n        const { user } = this.props;\r\n        const columns = [\r\n            {\r\n                title: 'RegisterDate',\r\n                dataIndex: 'registerDate',\r\n                key: 'date',\r\n                render: text => <a>{text}</a>,\r\n            },\r\n            {\r\n                title: 'FirstName',\r\n                dataIndex: 'firstName',\r\n                key: 'firstName',\r\n            },\r\n            {\r\n                title: 'LastName',\r\n                dataIndex: 'lastName',\r\n                key: 'lastName',\r\n            },\r\n\r\n            {\r\n                title: 'Email',\r\n                dataIndex: 'email',\r\n                key: 'email',\r\n            },\r\n            {\r\n                title: 'LocationID',\r\n                dataIndex: 'locationID',\r\n                key: 'locationID',\r\n            },\r\n\r\n        ];\r\n\r\n        return (\r\n            <>\r\n\r\n                <Table columns={columns} dataSource={user} />\r\n\r\n\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default User;","import React, {useState, Component} from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Table,  Button, Popconfirm, Input, InputNumber} from 'antd';\r\nimport {Form} from 'antd4'\r\n\r\nconst EditableCell = ({\r\n                          editing,\r\n                          dataIndex,\r\n                          title,\r\n                          inputType,\r\n                          record,\r\n                          index,\r\n                          children,\r\n                          ...restProps\r\n                      }) => {\r\n    const inputNode = inputType === 'number' ? <InputNumber /> : <Input />;\r\n    return (\r\n        <td {...restProps}>\r\n            {editing ? (\r\n                <Form.Item\r\n                    name={dataIndex}\r\n                    style={{\r\n                        margin: 0,\r\n                    }}\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: `Please Input ${title}!`,\r\n                        },\r\n                    ]}\r\n                >\r\n                    {inputNode}\r\n                </Form.Item>\r\n            ) : (\r\n                children\r\n            )}\r\n        </td>\r\n    );\r\n};\r\n\r\nclass Location extends Component {\r\n    formRef = React.createRef();\r\n    constructor(props) {\r\n        super(props);\r\n        this.state= {\r\n            dataSource : this.props.location,\r\n            count: this.props.location.length,\r\n            editingKey: ''\r\n        };\r\n        const formRef = React.createRef();\r\n\r\n        this.columns = [\r\n            {\r\n                title: 'Name',\r\n                dataIndex: 'name',\r\n                key: 'name',\r\n                editable: true,\r\n\r\n            },\r\n            {\r\n                title: 'Email',\r\n                dataIndex: 'email',\r\n                key: 'email',\r\n                editable: true,\r\n\r\n            },\r\n            {\r\n                title: 'DefaultRunningTime',\r\n                dataIndex: 'defaultRunningTime',\r\n                key: 'defaultRunningTime',\r\n                editable: true,\r\n\r\n\r\n            },\r\n            {\r\n                title: 'DefaultReservationExpireTime',\r\n                dataIndex: 'defaultReservationExpireTime',\r\n                key: 'defaultReservationExpireTime',\r\n                editable: true,\r\n            },\r\n            {\r\n                title: 'DefaultPickupTime',\r\n                dataIndex: 'defaultPickupTime',\r\n                key: 'defaultPickupTime',\r\n                editable: true,\r\n\r\n            },\r\n            {\r\n                title: \"\",\r\n                key: \"delete\",\r\n                render: (text, record) => (\r\n                    this.state.dataSource.length >= 1 ? (\r\n                        <Popconfirm title=\"Sure to delete?\" onConfirm={() => this.handleDelete(record._id)}>\r\n                            <a>Delete</a>\r\n                        </Popconfirm>\r\n                    ) : null\r\n\r\n                ),\r\n            },\r\n            {\r\n                title: \"\",\r\n                key: \"edit\",\r\n                render: (_, record) => {\r\n                    const editable = this.isEditing(record);\r\n                    return editable ? (\r\n                        <span>\r\n                    <a\r\n                        onClick={() => this.save(record._id)}\r\n                        style={{\r\n                            marginRight: 8,\r\n                        }}\r\n                    >\r\n                      Save\r\n                    </a>\r\n                    <Popconfirm title=\"Sure to cancel?\" onConfirm={this.cancel}>\r\n                      <a>Cancel</a>\r\n                    </Popconfirm>\r\n                    </span>\r\n                    ) : (\r\n                        <a disabled={this.state.editingKey !== ''} onClick={() => this.edit(record)}>\r\n                            Edit\r\n                        </a>\r\n                    );\r\n                },\r\n            },\r\n\r\n        ];\r\n    }\r\n\r\n    edit = record => {\r\n        this.formRef.current.setFieldsValue({\r\n            name: '',\r\n            email: '',\r\n            defaultRunningTime: '',\r\n            defaultReservationExpireTime: '',\r\n            defaultPickupTime: '',\r\n            ...record,\r\n        });\r\n\r\n        this.setState({\r\n            editingKey: record._id\r\n        });\r\n\r\n        //record._id = id; //Cannot be recovered\r\n    };\r\n\r\n    isEditing = (record) => {\r\n        return record._id === this.state.editingKey;\r\n    };\r\n\r\n\r\n    cancel = () => {\r\n        this.setState({\r\n            editingKey : ''\r\n        });\r\n    };\r\n\r\n    save = async key => {\r\n        try {\r\n            const row = await this.formRef.current.validateFields();\r\n            const newData = [...this.state.dataSource];\r\n            const index = newData.findIndex(item =>  item._id === key);\r\n\r\n            if (index > -1) {\r\n                const item = newData[index];\r\n                newData.splice(index, 1, { ...item, ...row });\r\n\r\n                if(key === \"VirtualID\"){\r\n                    this.handleAdd(newData[index]);\r\n                } else{\r\n                    this.handleSave(newData[index]);\r\n                }\r\n                this.setState({\r\n                    dataSource : newData,\r\n                    editingKey: ''\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    dataSource : newData,\r\n                    editingKey: ''\r\n                });\r\n\r\n            }\r\n        } catch (errInfo) {\r\n            console.log('Validate Failed:', errInfo);\r\n        }\r\n    };\r\n\r\n    handleSave = item => {\r\n        const {dataSource} = this.state;\r\n        fetch(`http://lmapp.us-east-2.elasticbeanstalk.com/api/locations/${item._id}`, {\r\n            headers:{\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: 'PUT',\r\n            body: JSON.stringify({\r\n                name: item.name,\r\n                email: item.email,\r\n                defaultRunningTime: item.defaultRunningTime,\r\n                defaultReservationExpireTime: item.defaultReservationExpireTime,\r\n                defaultPickupTime: item.defaultPickupTime,\r\n            }),\r\n        })\r\n            .then((response) => {\r\n                return response.json();\r\n                //throw new Error(response.msg);\r\n            })\r\n            .then((res) => {\r\n                return (res.isSuccess)\r\n            })\r\n            .catch((err) => console.log(err))\r\n    };\r\n\r\n    handleDelete = _id => {\r\n        const {count, dataSource} = this.state;\r\n        // this.setState({\r\n        //     dataSource: dataSource.filter(item => item._id !== _id),\r\n        // });\r\n\r\n        fetch(`http://lmapp.us-east-2.elasticbeanstalk.com/api/locations/${_id}`, {\r\n            headers:{\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: 'DELETE',\r\n        })\r\n            .then((response) => {\r\n                return response.json();\r\n                //throw new Error(response.msg);\r\n            })\r\n            .then(() => {\r\n                return this.setState({\r\n                    dataSource: dataSource.filter(item => item._id !== _id),\r\n                    count: count - 1,\r\n                });\r\n            })\r\n            .catch((err) => console.log(err))\r\n    };\r\n\r\n    onAdd = () => {\r\n        const {count, dataSource} = this.state;\r\n\r\n        const newData = {\r\n            name:\"\",\r\n            email:\"\",\r\n            defaultRunningTime: \"\",\r\n            defaultReservationExpireTime: \"\",\r\n            defaultPickupTime: \"\",\r\n            _id : \"VirtualID\"\r\n        };\r\n\r\n        this.setState({\r\n            dataSource:[...dataSource, newData],\r\n            count: count + 1,\r\n        });\r\n        this.edit(newData)\r\n    };\r\n\r\n    handleAdd = (newData) => {\r\n        fetch(\"http://lmapp.us-east-2.elasticbeanstalk.com/api/locations\", {\r\n            headers:{\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                name: newData.name,\r\n                email: newData.email,\r\n                defaultRunningTime: newData.defaultRunningTime,\r\n                defaultReservationExpireTime: newData.defaultReservationExpireTime,\r\n                defaultPickupTime: newData.defaultPickupTime,\r\n            }),\r\n        })\r\n            .then((response) => {\r\n                //console.log(response.text());\r\n                return response.json();\r\n                //throw new Error(response.msg);\r\n            })\r\n            .then((res) => {\r\n                if(res.isSuccess)\r\n                    newData._id = res.id\r\n                return res.isSuccess\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { dataSource } = this.state;\r\n\r\n        const mergedColumns = this.columns.map(col => {\r\n            if (!col.editable) {\r\n                return col;\r\n            }\r\n            return {\r\n                ...col,\r\n                onCell: record => ({\r\n                    record,\r\n                    inputType: col.dataIndex === 'name' || col.dataIndex ==='email' ? 'text' : 'number',\r\n                    dataIndex: col.dataIndex,\r\n                    title: col.title,\r\n                    editing: this.isEditing(record),\r\n                }),\r\n            };\r\n        });\r\n\r\n        //console.log(this.state.count)\r\n        return (\r\n            <div>\r\n                <Button disabled={this.state.editingKey !== ''} onClick={this.onAdd}\r\n                        type=\"primary\"\r\n                        style={{\r\n                            marginTop:16,\r\n                            marginBottom: 16\r\n                        }}>\r\n                    Add a New Location\r\n                </Button>\r\n                <Form ref={this.formRef} component={false}>\r\n                    <Table\r\n                        components={{\r\n                            body: {\r\n                                cell: EditableCell,\r\n                            },\r\n                        }}\r\n                        bordered\r\n                        rowKey = \"_id\"\r\n                        dataSource={dataSource}\r\n                        columns={mergedColumns}\r\n                        rowClassName=\"editable-row\"\r\n                        pagination={{\r\n                            onChange: this.cancel,\r\n                        }}\r\n                    />\r\n                </Form>\r\n            </div>\r\n\r\n        );\r\n    };\r\n\r\n}\r\nexport default Location;","import React, {Component} from 'react';\r\nimport Box from './Box';\r\nimport List from './List';\r\nimport {Menu} from \"antd\";\r\nimport { MailOutlined, AppstoreOutlined, SettingOutlined } from '@ant-design/icons';\r\nimport SubMenu from \"antd/es/menu/SubMenu\";\r\nimport User from \"./User\";\r\nimport Location from \"./Location\";\r\n\r\nclass Machine extends Component {\r\n    render() {\r\n        const { data } = this.props;\r\n        return (\r\n            <>\r\n                <List data={data}/>\r\n                <Box data={data}/>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Machine;","export const API_ROOT = 'http://lmapp.us-east-2.elasticbeanstalk.com/api';\r\nexport const TOKEN_KEY = 'TOKEN_KEY';\r\n\r\n//export const API_ROOT = 'http://localhost:3001/api';","import React, {Component} from 'react';\r\nimport { Icon } from 'antd';\r\n\r\nclass TopBar extends Component {\r\n    render() {\r\n        return (\r\n            <header className=\"App-header\">\r\n                <span className=\"App-title\">Sparkling Laundry Management</span>\r\n\r\n                {this.props.isLoggedIn ?\r\n                    <a className=\"logout\" onClick={this.props.handleLogout} >\r\n                        <Icon type=\"logout\"/>{' '}Logout\r\n                    </a> : null }\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TopBar;","\r\nimport React, {Component} from 'react';\r\nimport { Form, Icon, Input, Button, message} from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_ROOT } from '../constants';\r\n\r\nclass NormalLoginForm extends Component {\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                console.log('Received values of form: ', values);\r\n                fetch(`${API_ROOT}/admin/login`, {\r\n                    headers:{\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    method: 'POST',\r\n                    body: JSON.stringify({\r\n                        username: values.username,\r\n                        password: values.password,\r\n                    }),\r\n                })\r\n                    .then((response) =>{\r\n                        //console.log(response)\r\n                        if (response.ok) {\r\n                            return response.json();\r\n                        } else {\r\n                            throw new Error(\"ERROR\");\r\n                        }\r\n                    })\r\n                    .then((data) => {\r\n                        //console.log(data.token);\r\n                        this.props.handleLoginSucceed(data.token);   // data is token\r\n                        message.success('Login succeed!');\r\n\r\n                        //step4: 登录成功，保存token -> 用于实现持久登录\r\n                    })\r\n                    .catch((err) => {\r\n                        console.log(err);\r\n                        message.error('Login failed.');\r\n                    });\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n                <p className= \"login-title\">Admin Login\r\n                </p>\r\n                <Form.Item>\r\n                    {getFieldDecorator('username', {\r\n                        rules: [{ required: true, message: 'Please input your username!' }],\r\n                    })(\r\n                        <Input\r\n                            prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                            placeholder=\"Username\"\r\n                        />,\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    {getFieldDecorator('password', {\r\n                        rules: [{ required: true, message: 'Please input your Password!' }],\r\n                    })(\r\n                        <Input\r\n                            prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                        />,\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                        Log in\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport const Login = Form.create({ name: 'normal_login' })(NormalLoginForm);\r\n","import React, {Component} from 'react';\r\nimport {Menu} from \"antd\";\r\nimport { MailOutlined, AppstoreOutlined, SettingOutlined } from '@ant-design/icons';\r\nimport SubMenu from \"antd/es/menu/SubMenu\";\r\nimport Machine from \"./Machine\"\r\nimport User from \"./User\";\r\nimport Location from \"./Location\";\r\n\r\nclass Home extends Component {\r\n    state = {\r\n        current: 'Machine',\r\n    };\r\n\r\n    handleClick = e => {\r\n        console.log('click ', e);\r\n        this.setState({ current: e.key });\r\n    };\r\n\r\n    render() {\r\n        const { data, user, location } = this.props;\r\n        const { current } = this.state;\r\n        //console.log(location)\r\n        const componentsSwitch = (key) => {\r\n            switch (key) {\r\n                case 'Machine':\r\n                    return (<Machine data={data}/>);\r\n                case 'User':\r\n                    return (<User user={user}/>);\r\n                case 'Location':\r\n                    return (<Location location={location}/>);\r\n                default:\r\n                    return (<Machine data={data}/>);\r\n            }\r\n        };\r\n\r\n\r\n        return (\r\n            <div>\r\n                <Menu onClick={this.handleClick} selectedKeys={[current]} mode=\"horizontal\">\r\n                    <Menu.Item key=\"Machine\" icon={<AppstoreOutlined />}> Machine Status</Menu.Item>\r\n                    <Menu.Item key=\"User\" icon={<AppstoreOutlined />}> User Status</Menu.Item>\r\n                    <Menu.Item key=\"Location\" icon={<AppstoreOutlined />}> Location </Menu.Item>\r\n                </Menu>\r\n                {componentsSwitch(current)}\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, {Component} from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport { Login } from './Login';\r\nimport  Home  from './Home';\r\nclass Main extends Component {\r\n\r\n    getLogin = () => {\r\n        return this.props.isLoggedIn ?\r\n            <Redirect to=\"/home\"/> : <Login handleLoginSucceed={this.props.handleLoginSucceed}/>;\r\n    }\r\n    getMachine = () => {\r\n        //console.log(this.props.data)\r\n        return this.props.isLoggedIn ?\r\n            <Home data={this.props.data}\r\n            user={this.props.user}\r\n            location={this.props.location}/> : <Redirect to = \"/login\"/>;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <Switch>\r\n                    <Route path=\"/login\" render={this.getLogin}/>\r\n                    <Route path=\"/home\" render={this.getMachine}/>\r\n                    <Route render={this.getLogin}/>\r\n                </Switch>\r\n                <p className=\"footnote\">Sparkling Laundry Management, Mailing Address: admin@foxmail.com, LMA 2020 Project</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;\r\n","import React, { Component } from 'react';\r\nimport Machine from './components/Machine';\r\nimport User from './components/User';\r\nimport Location from './components/Location';\r\nimport { Menu } from 'antd';\r\nimport { MailOutlined, AppstoreOutlined, SettingOutlined } from '@ant-design/icons';\r\nimport SubMenu from \"antd/es/menu/SubMenu\";\r\nimport {TOKEN_KEY} from \"./constants\";\r\nimport TopBar from \"./components/TopBar\";\r\nimport Main from \"./components/Main\";\r\n\r\n\r\nclass App extends Component {\r\n  state = {\r\n    data: [],\r\n    //current: 'Machine',\r\n    user: [],\r\n    location: [],\r\n    isLoggedIn: Boolean(localStorage.getItem(TOKEN_KEY)),\r\n  };\r\n\r\n  handleLoginSucceed = (token) => {\r\n    console.log('token --- ', token)\r\n    localStorage.setItem(TOKEN_KEY, token)\r\n    this.setState({ isLoggedIn: true });\r\n  }\r\n\r\n  handleLogout = () => {\r\n    localStorage.removeItem(TOKEN_KEY);\r\n    this.setState({ isLoggedIn: false });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getMachineFromDb();\r\n    this.getUserFromDb();\r\n    this.getLocationFromDb();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n  }\r\n\r\n\r\n  // 我们的第一个使用后端api的get方法\r\n  // 从我们的数据库中获取数据\r\n  getMachineFromDb = () => {\r\n    fetch('/api/machines')\r\n      .then((data) => data.json())\r\n      .then((res) => this.setState({ data: res.machines}));\r\n  };\r\n\r\n  getUserFromDb = () => {\r\n    fetch('/api/users')\r\n        .then((user) => user.json())\r\n        .then((res) => this.setState({ user: res.users}));\r\n  };\r\n\r\n  getLocationFromDb = () => {\r\n    fetch('/api/locations')\r\n        .then((location) => location.json())\r\n        .then((res) => this.setState({ location: res.locations}));\r\n  };\r\n\r\n  putDataToDB = (message) => {\r\n    //todo\r\n  };\r\n\r\n  deleteFromDB = (idTodelete) => {\r\n    //todo\r\n  };\r\n\r\n  updateDB = (idToUpdate, updateToApply) => {\r\n    //todo\r\n  };\r\n\r\n\r\n  // handleClick = e => {\r\n  //   console.log('click ', e);\r\n  //   this.setState({ current: e.key });\r\n  // };\r\n\r\n  render() {\r\n    // const { data } = this.state;\r\n    // const { current } = this.state;\r\n    // const { user} = this.state;\r\n    // const { location } = this.state;\r\n    // const componentsSwitch = (key) => {\r\n    //   switch (key) {\r\n    //     case 'Machine':\r\n    //       return ( <Machine data={data}/>);\r\n    //     case 'User':\r\n    //       return (<User user={user}/>);\r\n    //     case 'Location':\r\n    //       return (<Location location={location}/>);\r\n    //     default:\r\n    //       return ( <Machine data={data}/>);\r\n    //   }\r\n    // };\r\n\r\n\r\n    return (\r\n        <div className=\"App\">\r\n          <TopBar handleLogout={this.handleLogout}\r\n                  isLoggedIn={this.state.isLoggedIn}\r\n          />\r\n          <Main  handleLoginSucceed={this.handleLoginSucceed}\r\n                 isLoggedIn={this.state.isLoggedIn}\r\n                 data={this.state.data}\r\n                 user={this.state.user}\r\n                 location={this.state.location}\r\n          />\r\n\r\n        </div>\r\n      // <>\r\n      //   <Menu onClick={this.handleClick} selectedKeys={[current]} mode=\"horizontal\">\r\n      //     <Menu.Item key=\"Machine\" icon={<AppstoreOutlined />}>\r\n      //       Machine Status\r\n      //\r\n      //     </Menu.Item>\r\n      //     <Menu.Item key=\"User\"  icon={<AppstoreOutlined />}>\r\n      //       User Status\r\n      //     </Menu.Item>\r\n      //     <Menu.Item key=\"Location\"  icon={<AppstoreOutlined />}>\r\n      //       Location\r\n      //     </Menu.Item>\r\n      //   </Menu>\r\n      //\r\n      //   {componentsSwitch(current)}\r\n      //\r\n      // </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}