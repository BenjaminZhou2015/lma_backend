{"version":3,"sources":["assets/logo.png","components/TopNav.js","constants.js","components/UserTable.js","components/LocationTable.js","components/MachineList.js","components/Home.js","components/Login.js","components/Navigation.js","components/App.js","index.js"],"names":["module","exports","TopBar","props","user","logout","className","src","logo","alt","token","icon","LoginOutlined","onClick","type","API_ROOT","UserTable","useState","data","setData","useEffect","request","then","response","users","columns","title","dataIndex","key","render","text","Date","toLocaleString","dataSource","rowKey","EditableCell","editing","inputType","children","record","index","restProps","inputNode","Item","name","style","margin","rules","required","message","LocationTable","formRef","React","createRef","edit","current","setFieldsValue","email","defaultRunningTime","defaultReservationExpireTime","defaultPickupTime","setState","editingKey","_id","isEditing","state","cancel","last","pop","count","push","save","a","validateFields","row","newData","findIndex","item","splice","handleAdd","handleSave","console","log","fetch","headers","method","body","JSON","stringify","json","res","isSuccess","catch","err","handleDelete","filter","onAdd","id","editable","length","onConfirm","_","marginRight","disabled","locations","mergedColumns","this","map","col","onCell","marginTop","marginBottom","ref","component","components","cell","bordered","rowClassName","pagination","onChange","Component","Option","Select","MachineList","visible","setV","machine","setMachine","setUsers","setLocations","useForm","form","machines","resetFields","date","isAvailable","CheckCircleTwoTone","twoToneColor","CloseCircleTwoTone","size","notification","success","msg","description","danger","closable","width","mask","maskClosable","onClose","footer","textAlign","submit","layout","initialValues","onFinish","values","gutter","span","label","Group","value","valuePropName","location","TabPane","Tabs","Home","defaultActiveKey","centered","tab","Login","setUser","duration","error","prefix","UserOutlined","placeholder","LockOutlined","htmlType","Navigation","getLogin","Redirect","to","Switch","Route","path","App","ReactDOM","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.d20dc017.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.aafc7e68.png\";","import React from 'react';\nimport logo from '../assets/logo.png';\nimport '../styles/TopNav.css';\nimport { LoginOutlined } from '@ant-design/icons';\nimport { Button } from 'antd';\n\nconst TopBar = props => {\n    const { user, logout } = props;\n    return (\n        <div className=\"App-header\">\n            <div className=\"logo\">\n                <img src={logo} alt=\"\"/>\n            </div>\n            <span className=\"App-title\">Sparkling Admin Console</span>\n            <div className=\"logout\">\n                {\n                    user.token ?\n                        <Button\n                            icon={<LoginOutlined />}\n                            onClick={logout}\n                            type=\"primary\"\n                        >\n                            Logout\n                        </Button> : null\n                }\n            </div>\n        </div>\n    );\n}\n\nexport default TopBar;\n","export const API_ROOT = 'http://lmapp.us-east-2.elasticbeanstalk.com/api';\r\nexport const TOKEN_KEY = 'TOKEN_KEY';\r\n\r\n//export const API_ROOT = 'http://localhost:3001/api';","import React, { useEffect, useState } from 'react';\nimport 'antd/dist/antd.css';\nimport request from \"umi-request\";\nimport { Table } from 'antd';\nimport { API_ROOT } from '../constants';\n\nconst UserTable = () => {\n    const [ data, setData ] = useState()\n    useEffect(() => {\n        request(`${API_ROOT}/users`).then(\n            response => {\n                const { users } = response;\n                setData(users);\n            }\n        )\n    }, []);\n    const columns = [\n        {\n            title: 'RegisterDate',\n            dataIndex: 'registerDate',\n            key: 'date',\n            render: text => new Date(text).toLocaleString(),\n        },\n        {\n            title: 'FirstName',\n            dataIndex: 'firstName',\n            key: 'firstName',\n        },\n        {\n            title: 'LastName',\n            dataIndex: 'lastName',\n            key: 'lastName',\n        },\n\n        {\n            title: 'Email',\n            dataIndex: 'email',\n            key: 'email',\n        },\n        {\n            title: 'LocationID',\n            dataIndex: 'locationID',\n            key: 'locationID',\n        },\n\n    ];\n\n    return (\n        <Table columns={columns} dataSource={data} rowKey=\"email\"/>\n    );\n}\n\nexport default UserTable;\n","import React, { Component } from 'react';\nimport 'antd/dist/antd.css';\nimport { Table,  Button, Popconfirm, Input, InputNumber, Form } from 'antd';\nimport request from \"umi-request\";\nimport { API_ROOT } from '../constants';\n\nconst EditableCell = ({\n                          editing,\n                          dataIndex,\n                          title,\n                          inputType,\n                          record,\n                          index,\n                          children,\n                          ...restProps\n                      }) => {\n    const inputNode = inputType === 'number' ? <InputNumber /> : <Input />;\n    return (\n        <td {...restProps}>\n            {editing ? (\n                <Form.Item\n                    name={dataIndex}\n                    style={{\n                        margin: 0,\n                    }}\n                    rules={[\n                        {\n                            required: true,\n                            message: `Please Input ${title}!`,\n                        },\n                    ]}\n                >\n                    {inputNode}\n                </Form.Item>\n            ) : (\n                children\n            )}\n        </td>\n    );\n};\n\nclass LocationTable extends Component {\n    formRef = React.createRef();\n    constructor(props) {\n        super(props);\n        this.state= {\n            dataSource : [],\n            count: 0,\n            editingKey: ''\n        };\n        const formRef = React.createRef();\n\n        this.columns = [\n            {\n                title: 'Name',\n                dataIndex: 'name',\n                key: 'name',\n                editable: true,\n\n            },\n            {\n                title: 'Email',\n                dataIndex: 'email',\n                key: 'email',\n                editable: true,\n\n            },\n            {\n                title: 'DefaultRunningTime',\n                dataIndex: 'defaultRunningTime',\n                key: 'defaultRunningTime',\n                editable: true,\n\n\n            },\n            {\n                title: 'DefaultReservationExpireTime',\n                dataIndex: 'defaultReservationExpireTime',\n                key: 'defaultReservationExpireTime',\n                editable: true,\n            },\n            {\n                title: 'DefaultPickupTime',\n                dataIndex: 'defaultPickupTime',\n                key: 'defaultPickupTime',\n                editable: true,\n\n            },\n            {\n                title: \"\",\n                key: \"delete\",\n                render: (text, record) => (\n                    this.state.dataSource.length >= 1 ? (\n                        <Popconfirm title=\"Sure to delete?\" onConfirm={() => this.handleDelete(record._id)}>\n                            <a>Delete</a>\n                        </Popconfirm>\n                    ) : null\n\n                ),\n            },\n            {\n                title: \"\",\n                key: \"edit\",\n                render: (_, record) => {\n                    const editable = this.isEditing(record);\n                    return editable ? (\n                        <span>\n                    <a\n                        onClick={() => this.save(record._id)}\n                        style={{\n                            marginRight: 8,\n                        }}\n                    >\n                      Save\n                    </a>\n                    <Popconfirm title=\"Sure to cancel?\" onConfirm={this.cancel}>\n                      <a>Cancel</a>\n                    </Popconfirm>\n                    </span>\n                    ) : (\n                        <a disabled={this.state.editingKey !== ''} onClick={() => this.edit(record)}>\n                            Edit\n                        </a>\n                    );\n                },\n            },\n\n        ];\n    }\n\n    edit = record => {\n        this.formRef.current.setFieldsValue({\n            name: '',\n            email: '',\n            defaultRunningTime: '',\n            defaultReservationExpireTime: '',\n            defaultPickupTime: '',\n            ...record,\n        });\n\n        this.setState({\n            editingKey: record._id\n        });\n\n        //record._id = id; //Cannot be recovered\n    };\n\n    isEditing = (record) => {\n        return record._id === this.state.editingKey;\n    };\n\n\n    cancel = () => {\n        const { dataSource } = this.state;\n        const last = dataSource.pop();\n        if (last._id === \"VirtualID\") {\n            this.setState({\n                editingKey: '',\n                dataSource: [...dataSource],\n                count: this.state.count - 1,\n            });\n        } else {\n            dataSource.push(last);\n            this.setState({\n                editingKey: '',\n            });\n        }\n    };\n\n    save = async key => {\n        try {\n            const row = await this.formRef.current.validateFields();\n            const newData = [...this.state.dataSource];\n            const index = newData.findIndex(item =>  item._id === key);\n\n            if (index > -1) {\n                const item = newData[index];\n                newData.splice(index, 1, { ...item, ...row });\n\n                if(key === \"VirtualID\"){\n                    this.handleAdd(newData[index]);\n                } else{\n                    this.handleSave(newData[index]);\n                }\n                this.setState({\n                    dataSource : newData,\n                    editingKey: ''\n                });\n            } else {\n                this.setState({\n                    dataSource : newData,\n                    editingKey: ''\n                });\n\n            }\n        } catch (errInfo) {\n            console.log('Validate Failed:', errInfo);\n        }\n    };\n\n    handleSave = item => {\n        const {dataSource} = this.state;\n        fetch(`http://lmapp.us-east-2.elasticbeanstalk.com/api/locations/${item._id}`, {\n            headers:{\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            method: 'PUT',\n            body: JSON.stringify({\n                name: item.name,\n                email: item.email,\n                defaultRunningTime: item.defaultRunningTime,\n                defaultReservationExpireTime: item.defaultReservationExpireTime,\n                defaultPickupTime: item.defaultPickupTime,\n            }),\n        })\n            .then((response) => {\n                return response.json();\n                //throw new Error(response.msg);\n            })\n            .then((res) => {\n                return (res.isSuccess)\n            })\n            .catch((err) => console.log(err))\n    };\n\n    handleDelete = _id => {\n        const {count, dataSource} = this.state;\n        // this.setState({\n        //     dataSource: dataSource.filter(item => item._id !== _id),\n        // });\n\n        fetch(`http://lmapp.us-east-2.elasticbeanstalk.com/api/locations/${_id}`, {\n            headers:{\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            method: 'DELETE',\n        })\n            .then((response) => {\n                return response.json();\n                //throw new Error(response.msg);\n            })\n            .then(() => {\n                return this.setState({\n                    dataSource: dataSource.filter(item => item._id !== _id),\n                    count: count - 1,\n                });\n            })\n            .catch((err) => console.log(err))\n    };\n\n    onAdd = () => {\n        const {count, dataSource} = this.state;\n\n        const newData = {\n            name:\"\",\n            email:\"\",\n            defaultRunningTime: \"\",\n            defaultReservationExpireTime: \"\",\n            defaultPickupTime: \"\",\n            _id : \"VirtualID\"\n        };\n\n        this.setState({\n            dataSource:[...dataSource, newData],\n            count: count + 1,\n        });\n        this.edit(newData)\n    };\n\n    handleAdd = (newData) => {\n        fetch(\"http://lmapp.us-east-2.elasticbeanstalk.com/api/locations\", {\n            headers:{\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            method: 'POST',\n            body: JSON.stringify({\n                name: newData.name,\n                email: newData.email,\n                defaultRunningTime: newData.defaultRunningTime,\n                defaultReservationExpireTime: newData.defaultReservationExpireTime,\n                defaultPickupTime: newData.defaultPickupTime,\n            }),\n        })\n            .then((response) => {\n                //console.log(response.text());\n                return response.json();\n                //throw new Error(response.msg);\n            })\n            .then((res) => {\n                if(res.isSuccess)\n                    newData._id = res.id\n                return res.isSuccess\n            })\n            .catch((err) => console.log(err))\n    }\n\n    componentDidMount() {\n        request(`${API_ROOT}/locations`).then(\n            response => {\n                const { locations } = response;\n                this.setState({\n                    dataSource: locations,\n                    count: locations.length\n                })\n            }\n        )\n    }\n\n\n    render() {\n        const { dataSource } = this.state;\n\n        const mergedColumns = this.columns.map(col => {\n            if (!col.editable) {\n                return col;\n            }\n            return {\n                ...col,\n                onCell: record => ({\n                    record,\n                    inputType: col.dataIndex === 'name' || col.dataIndex ==='email' ? 'text' : 'number',\n                    dataIndex: col.dataIndex,\n                    title: col.title,\n                    editing: this.isEditing(record),\n                }),\n            };\n        });\n\n        return (\n            <div>\n                <Button disabled={this.state.editingKey !== ''} onClick={this.onAdd}\n                        type=\"primary\"\n                        style={{\n                            marginTop:16,\n                            marginBottom: 16\n                        }}>\n                    Add a New Location\n                </Button>\n                <Form ref={this.formRef} component={false}>\n                    <Table\n                        components={{\n                            body: {\n                                cell: EditableCell,\n                            },\n                        }}\n                        bordered\n                        rowKey = \"_id\"\n                        dataSource={this.state.dataSource}\n                        columns={mergedColumns}\n                        rowClassName=\"editable-row\"\n                        pagination={{\n                            onChange: this.cancel,\n                        }}\n                    />\n                </Form>\n            </div>\n\n        );\n    };\n\n}\n\nexport default LocationTable;\n","import React, { useEffect, useState } from \"react\";\nimport { API_ROOT } from '../constants';\nimport { Table, Popconfirm, Button, Divider, Space, Drawer, Form, InputNumber, Select, Switch, Radio, Row, Col, notification } from \"antd\";\nimport { CheckCircleTwoTone, CloseCircleTwoTone } from \"@ant-design/icons\";\nimport request from \"umi-request\";\nimport {useForm} from \"antd/es/form/Form\";\n\nconst { Option } = Select;\n\nconst MachineList = () => {\n    const [ data, setData ] = useState();\n    const [ visible, setV ] = useState(false);\n    const [ machine, setMachine ] = useState({});\n    const [ users, setUsers ] = useState([]);\n    const [ locations, setLocations ] = useState([]);\n    const [ form ] = useForm();\n    useEffect(() => {\n        request(`${API_ROOT}/users`)\n            .then(\n                response => {\n                    const { users } = response;\n                    setUsers(users);\n                }\n            )\n        request(`${API_ROOT}/locations`)\n            .then(\n                response => {\n                    const { locations } = response;\n                    setLocations(locations);\n                }\n            )\n    }, []);\n    useEffect(() => {\n        request(`${API_ROOT}/machines`)\n            .then(\n                response => {\n                    const { machines } = response;\n                    setData(machines);\n                }\n            )\n    }, [visible, users, locations]);\n    useEffect(() => {\n        form.resetFields();\n    }, [machine]);\n    const columns = [\n        {\n            title: 'Serial Number',\n            dataIndex: 'sn',\n            key: 'sn',\n            editable: true,\n        },\n        {\n            title: 'LocationID',\n            dataIndex: 'locationID',\n            key: 'locationID',\n            editable: true,\n\n        },\n        {\n            title: 'Start time',\n            dataIndex: 'startTime',\n            key: 'startTime',\n            editable: true,\n            render: date => new Date(date).toLocaleString()\n        },\n        {\n            title: 'Available',\n            dataIndex: 'isAvailable',\n            key: 'isAvailable',\n            editable: true,\n            render: isAvailable => isAvailable ? <CheckCircleTwoTone twoToneColor=\"#52c41a\"/> :  <CloseCircleTwoTone twoToneColor=\"#eb2f96\"/>\n        },\n        {\n            title: 'Reserved',\n            dataIndex: 'isReserved',\n            key: 'isReserved',\n            editable: true,\n            render: isAvailable => isAvailable ? <CheckCircleTwoTone twoToneColor=\"#52c41a\"/> :  <CloseCircleTwoTone twoToneColor=\"#eb2f96\"/>\n        },\n        {\n            title: 'Picked up',\n            dataIndex: 'isPickedUp',\n            key: 'isPickedUp',\n            editable: true,\n            render: isAvailable => isAvailable ? <CheckCircleTwoTone twoToneColor=\"#52c41a\"/> :  <CloseCircleTwoTone twoToneColor=\"#eb2f96\"/>\n        },\n        {\n            title: 'Type',\n            dataIndex: 'machineType',\n            key: 'machineType',\n            editable: true,\n        },\n        {\n            title: 'Using by',\n            dataIndex: 'userID',\n            key: 'userID',\n            editable: true,\n        },\n        {\n            title: 'Reserved by',\n            dataIndex: 'userReservedID',\n            key: 'userReservedID',\n            editable: true,\n        },\n        {\n            title: \"Actions\",\n            key: \"op\",\n            render: (_, record) => {\n                return (\n                    <Space size=\"small\">\n                        <Button type=\"link\" onClick={() => {setV(true); setMachine(record);}}>\n                            edit\n                        </Button>\n                        <Divider type=\"vertical\" />\n                        <Popconfirm title=\"Sure to delete?\" onConfirm={() => {\n                            request(`${API_ROOT}/machines/${record._id}`, {\n                                method: 'DELETE'\n                            }).then(\n                                response => {\n                                    notification.success({\n                                        message: response.msg,\n                                        description: \"Deleted\"\n                                    })\n                                }\n                            ).catch(\n                                err => {\n                                    notification.success({\n                                        message: err.msg,\n                                        description: err\n                                    })\n                                }\n                            );\n                        }}>\n                            <Button danger type=\"link\">delete</Button>\n                        </Popconfirm>\n                    </Space>\n                )\n            },\n        },\n    ];\n    return (\n        <>\n            <Button\n                type=\"primary\"\n                style={{\n                    marginTop:16,\n                    marginBottom: 16\n                }}\n                onClick={() => {\n                    setMachine({});\n                    setV(true);\n                }}\n            >\n                Add a machine\n            </Button>\n            <Table\n                columns={columns}\n                dataSource={data}\n                rowKey=\"_id\"\n            />\n            <Drawer\n                title=\"Add/Modify machine\"\n                visible={visible}\n                closable\n                width={720}\n                mask\n                maskClosable\n                onClose={() => {setV(false); setMachine({});}}\n                footer={\n                    <div\n                        style={{\n                            textAlign: 'right',\n                        }}\n                    >\n                        <Button onClick={() => setV(false)} style={{ marginRight: 8 }}>\n                            Cancel\n                        </Button>\n                        <Button onClick={() => form.submit()} type=\"primary\">\n                            Submit\n                        </Button>\n                    </div>\n                }\n            >\n                <Form\n                    layout=\"vertical\"\n                    form={form}\n                    initialValues={machine}\n                    onFinish={values => {\n                        if (machine._id) {\n                            request(`${API_ROOT}/machines/${machine._id}`, {\n                                method: 'PUT',\n                                data: {\n                                    ...values\n                                }\n                            }).then(\n                                response => {\n                                    notification.success({\n                                        message: response.msg,\n                                        description: \"Updated\"\n                                    })\n                                }\n                            );\n                        } else {\n                            request(`${API_ROOT}/machines`, {\n                                method: 'POST',\n                                data: {\n                                    ...values\n                                }\n                            });\n                        }\n                        setMachine({});\n                        setV(false);\n                    }}\n                >\n                    <Row gutter={16}>\n                        <Col span={12}>\n                            <Form.Item\n                                label=\"Serial Number\"\n                                name=\"sn\"\n                                required\n                            >\n                                <InputNumber />\n                            </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item\n                                required\n                                label=\"Type\"\n                                name=\"type\"\n                            >\n                                <Radio.Group >\n                                    <Radio value=\"washer\">washer</Radio>\n                                    <Radio value=\"dryer\">dryer</Radio>\n                                </Radio.Group>\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <Row gutter={16}>\n                        <Col span={8}>\n                            <Form.Item\n                                required\n                                label=\"isAvailable\"\n                                name=\"isAvailable\"\n                                valuePropName=\"checked\"\n                            >\n                                <Switch />\n                            </Form.Item>\n                        </Col>\n                        <Col span={8}>\n                            <Form.Item\n                                required\n                                label=\"isReserved\"\n                                name=\"isReserved\"\n                                valuePropName=\"checked\"\n                            >\n                                <Switch />\n                            </Form.Item>\n                        </Col>\n                        <Col span={8}>\n                            <Form.Item\n                                required\n                                label=\"isPickedUp\"\n                                name=\"isPickedUp\"\n                                valuePropName=\"checked\"\n                            >\n                                <Switch />\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <Form.Item\n                        required\n                        label=\"Location\"\n                        name=\"locationID\"\n                    >\n                        <Select>\n                            {locations.map(location => <Option key={location._id} value={location._id}>{location.name}</Option>)}\n                        </Select>\n                    </Form.Item>\n                    <Form.Item\n                        label=\"Using by\"\n                        name=\"userID\"\n                    >\n                        <Select>\n                            {users.map(user => <Option key={user._id} value={user._id}>{user.email}</Option>)}\n                        </Select>\n                    </Form.Item>\n                    <Form.Item\n                        label=\"Reserved by\"\n                        name=\"userReservedID\"\n                    >\n                        <Select>\n                            {users.map(user => <Option key={user._id} value={user._id}>{user.email}</Option>)}\n                        </Select>\n                    </Form.Item>\n                </Form>\n            </Drawer>\n        </>\n    )\n};\n\nexport default MachineList;\n","import React from \"react\";\nimport { Tabs } from \"antd\";\nimport \"../styles/Home.css\";\nimport UserTable from \"./UserTable\";\nimport LocationTable from \"./LocationTable\";\nimport MachineList from \"./MachineList\";\n\nconst { TabPane } = Tabs;\n\nconst Home = props => {\n    return (\n        <div className=\"contents\">\n            <Tabs defaultActiveKey=\"1\" centered size=\"large\">\n                <TabPane tab=\"Machines\" key=\"1\">\n                    <MachineList />\n                </TabPane>\n                <TabPane tab=\"Users\" key=\"2\">\n                    <UserTable />\n                </TabPane>\n                <TabPane tab=\"Locations\" key=\"3\">\n                    <LocationTable />\n                </TabPane>\n            </Tabs>\n        </div>\n    )\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Form, Button, Input, notification } from 'antd';\nimport request from 'umi-request';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport '../styles/Login.css';\nimport { API_ROOT } from '../constants';\n\nconst Login = props => {\n    const { setUser } = props;\n    const onSubmit = values => {\n        request(`${API_ROOT}/admin/login` ,{\n            method: 'POST',\n            data: {\n                ...values\n            }\n        }).then(\n            response => {\n                if (response.isSuccess === \"true\") {\n                    const { token, msg } = response;\n                    setUser({\n                        token,\n                        ...values\n                    });\n                    notification.success({\n                        description: \"Redirecting...\",\n                        duration: 1.5,\n                        message: msg\n                    })\n                } else {\n                    const { msg } = response;\n                    notification.error({\n                        description: \"Login failed\",\n                        message: msg\n                    })\n                }\n            }\n        ).catch(err => {\n            notification.error({\n                description: \"Login error\",\n                message: err\n            });\n        });\n    }\n    return (\n        <Form className=\"login-form\" onFinish={onSubmit}>\n            <p className= \"login-title\">Admin Login\n            </p>\n            <Form.Item\n                name=\"username\"\n                rules={[{ required: true, message: 'Please input your username!' }]}\n            >\n                <Input\n                    prefix={<UserOutlined />}\n                    placeholder=\"Username\"\n                />\n            </Form.Item>\n            <Form.Item\n                name=\"password\"\n                rules={[{ required: true, message: 'Please input your password!' }]}\n            >\n                <Input\n                    prefix={<LockOutlined />}\n                    type=\"password\"\n                    placeholder=\"Password\"\n                />\n            </Form.Item>\n            <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                    Log in\n                </Button>\n            </Form.Item>\n        </Form>\n    );\n};\n\nexport default Login;\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Home from \"./Home\";\nimport Login from \"./Login\";\nimport \"../styles/Main.css\";\n\nconst Navigation = props => {\n    const { user } = props;\n    const getLogin = () => {\n        return user.token ?\n            <Redirect to=\"/home\"/> : <Login {...props}/>;\n    }\n    const getHome = () => {\n        return user.token ?\n            <Home /> : <Redirect to = \"/login\"/>;\n    }\n    return (\n        <div className=\"main\">\n            <Switch>\n                <Route path=\"/login\" render={getLogin}/>\n                <Route path=\"/home\" render={getHome}/>\n                <Route render={getLogin}/>\n            </Switch>\n        </div>\n    );\n}\n\nexport default Navigation;\n","import React, { useState } from 'react';\nimport '../styles/App.css';\nimport TopBar from \"./TopNav\";\nimport Navigation from \"./Navigation\";\n\nconst App = () => {\n    const [ user, setUser ] = useState({});\n    const logout = () => {\n        setUser({});\n    };\n    return (\n        <div className=\"App\">\n            <TopBar user={user} logout={logout}/>\n            <Navigation user={user} setUser={setUser}/>\n            <div className=\"footer\">Sparkling Laundry Management, Mailing Address: admin@foxmail.com, LMA 2020 Project</div>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}