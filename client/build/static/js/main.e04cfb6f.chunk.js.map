{"version":3,"sources":["components/Box.js","components/List.js","components/User.js","components/Location.js","components/Machine.js","constants.js","components/TopBar.js","components/Login.js","components/Home.js","components/Main.js","App.js","index.js"],"names":["style","background","padding","Box","data","this","props","orientation","color","fontWeight","fontSize","gutter","length","sort","dat","machineType","map","className","span","backgroundColor","isAvailable","width","height","margin","display","justifyContent","alignItems","sn","Component","List","availableMachines","title","Item","label","User","user","columns","dataIndex","key","render","text","dataSource","EditableCell","editing","inputType","children","record","index","restProps","inputNode","name","rules","required","message","Location","formRef","React","createRef","edit","current","setFieldsValue","email","defaultRunningTime","defaultReservationExpireTime","defaultPickupTime","setState","editingKey","_id","isEditing","state","cancel","filter","item","save","a","validateFields","row","newData","findIndex","splice","handleAdd","handleSave","console","log","fetch","headers","method","body","JSON","stringify","then","response","json","res","isSuccess","catch","err","handleDelete","count","onAdd","id","location","editable","onConfirm","disabled","_","onClick","marginRight","mergedColumns","col","onCell","type","marginTop","marginBottom","ref","component","components","cell","bordered","rowKey","rowClassName","pagination","onChange","Machine","API_ROOT","TopBar","isLoggedIn","handleLogout","NormalLoginForm","handleSubmit","e","preventDefault","form","values","username","password","ok","Error","handleLoginSucceed","token","success","error","getFieldDecorator","onSubmit","prefix","placeholder","htmlType","Login","Form","create","Home","handleClick","selectedKeys","mode","icon","AppstoreOutlined","componentsSwitch","Main","getLogin","Redirect","to","getMachine","Switch","Route","path","App","Boolean","localStorage","getItem","setItem","removeItem","getMachineFromDb","machines","getUserFromDb","users","getLocationFromDb","locations","putDataToDB","deleteFromDB","idTodelete","updateDB","idToUpdate","updateToApply","ReactDOM","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.e04cfb6f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Row, Col, Divider } from 'antd';\nimport '../index.css';\nimport 'antd/dist/antd.css';\n\nconst style = { background: '#0092ff', padding: '8px 0' };\n\n\nclass Box extends Component{\n\n\n    render() {\n        const { data } = this.props;\n        return (\n            <>\n                <Divider orientation=\"middle\" style={{ color: '#333', fontWeight: 'normal',fontSize:30 }}>\n                    live status\n                </Divider>\n                <Row gutter={[16, 24]}>\n                    {data.length <= 0\n                        ? 'NO DB ENTRIES YET'\n                        : data.sort((dat)=>dat.machineType===\"washer\"?-1:1).map((dat) => (\n\n                            <Col className=\"gutter-row\" span={6}>\n                                <div style={\n                                    {...style,\n                                        backgroundColor:dat.isAvailable?'#98FB98':'#87CEFA',\n                                        color:'black',\n\n                                        width:300,\n                                        height:100,\n                                        margin:10,\n\n                                        display: 'flex',\n                                        justifyContent: 'center',\n                                        alignItems: 'center',\n\n                                        fontSize:20\n\n                                    }}> {dat.machineType+\" \"+dat.sn} </div>\n                            </Col>\n\n                        ))}\n\n\n                </Row>\n        </>\n        );\n\n    }\n\n}\nexport default Box;","import React, { Component } from 'react';\nimport 'antd/dist/antd.css';\nimport { Descriptions} from 'antd';\n\n\n\nclass List extends Component{\n\n\n    render() {\n        const { data } = this.props;\n        let availableMachines = 0;\n        data.map((dat) => {\n            if(dat.isAvailable) {\n                availableMachines += 1;\n            }\n            return null;\n            }\n        )\n\n        return (\n                <>\n                    <Descriptions title=\"Statistics\">\n                        <Descriptions.Item label=\"Washer & Dryer\">{data.length}</Descriptions.Item>\n                        <Descriptions.Item label=\"Available Machines\">{availableMachines}</Descriptions.Item>\n                    </Descriptions>,\n\n\n\n\n                </>\n\n            )\n\n\n    }\n\n}\nexport default List;","import React, {Component} from 'react';\nimport 'antd/dist/antd.css';\nimport { Table, Tag, Space } from 'antd';\n\n\nclass User extends Component {\n\n\n\n    render() {\n        const { user } = this.props;\n        const columns = [\n            {\n                title: 'RegisterDate',\n                dataIndex: 'registerDate',\n                key: 'date',\n                render: text => <a>{text}</a>,\n            },\n            {\n                title: 'FirstName',\n                dataIndex: 'firstName',\n                key: 'firstName',\n            },\n            {\n                title: 'LastName',\n                dataIndex: 'lastName',\n                key: 'lastName',\n            },\n\n            {\n                title: 'Email',\n                dataIndex: 'email',\n                key: 'email',\n            },\n            {\n                title: 'LocationID',\n                dataIndex: 'locationID',\n                key: 'locationID',\n            },\n\n        ];\n\n        return (\n            <>\n\n                <Table columns={columns} dataSource={user} />\n\n\n            </>\n        );\n    }\n}\n\nexport default User;","import React, {useState, Component} from 'react';\nimport 'antd/dist/antd.css';\nimport { Table,  Button, Popconfirm, Input, InputNumber} from 'antd';\nimport {Form} from 'antd4'\n\nconst Virtual_ID = \"VirtualID\"\n\nconst EditableCell = ({\n                          editing,\n                          dataIndex,\n                          title,\n                          inputType,\n                          record,\n                          index,\n                          children,\n                          ...restProps\n                      }) => {\n    const inputNode = inputType === 'number' ? <InputNumber /> : <Input />;\n    return (\n        <td {...restProps}>\n            {editing ? (\n                <Form.Item\n                    name={dataIndex}\n                    style={{\n                        margin: 0,\n                    }}\n                    rules={[\n                        {\n                            required: true,\n                            message: `Please Input ${title}!`,\n                        },\n                    ]}\n                >\n                    {inputNode}\n                </Form.Item>\n            ) : (\n                children\n            )}\n        </td>\n    );\n};\n\nclass Location extends Component {\n    formRef = React.createRef();\n    constructor(props) {\n        super(props);\n        this.state= {\n            dataSource : this.props.location,\n            count: this.props.location.length,\n            editingKey: ''\n        };\n        const formRef = React.createRef();\n\n        this.columns = [\n            {\n                title: 'Name',\n                dataIndex: 'name',\n                key: 'name',\n                editable: true,\n\n            },\n            {\n                title: 'Email',\n                dataIndex: 'email',\n                key: 'email',\n                editable: true,\n\n            },\n            {\n                title: 'DefaultRunningTime',\n                dataIndex: 'defaultRunningTime',\n                key: 'defaultRunningTime',\n                editable: true,\n\n\n            },\n            {\n                title: 'DefaultReservationExpireTime',\n                dataIndex: 'defaultReservationExpireTime',\n                key: 'defaultReservationExpireTime',\n                editable: true,\n            },\n            {\n                title: 'DefaultPickupTime',\n                dataIndex: 'defaultPickupTime',\n                key: 'defaultPickupTime',\n                editable: true,\n\n            },\n            {\n                title: \"\",\n                key: \"delete\",\n                render: (text, record) => (\n                    this.state.dataSource.length >= 1 ? (\n                        <Popconfirm title=\"Sure to delete?\" onConfirm={() => this.handleDelete(record._id)}>\n                            <a disabled={this.state.editingKey === Virtual_ID} >Delete</a>\n                        </Popconfirm>\n                    ) : null\n\n                ),\n            },\n            {\n                title: \"\",\n                key: \"edit\",\n                render: (_, record) => {\n                    const editable = this.isEditing(record);\n                    return editable ? (\n                        <span>\n                    <a\n                        onClick={() => this.save(record._id)}\n                        style={{\n                            marginRight: 8,\n                        }}\n                    >\n                      Save\n                    </a>\n\n                    <a onClick={() => this.cancel()}>Cancel</a>\n\n                    </span>\n                    ) : (\n                        <a disabled={this.state.editingKey !== ''} onClick={() => this.edit(record)}>\n                            Edit\n                        </a>\n                    );\n                },\n            },\n\n        ];\n    }\n\n    edit = record => {\n        this.formRef.current.setFieldsValue({\n            name: '',\n            email: '',\n            defaultRunningTime: '',\n            defaultReservationExpireTime: '',\n            defaultPickupTime: '',\n            ...record,\n        });\n\n        this.setState({\n            editingKey: record._id\n        });\n\n        //record._id = id; //Cannot be recovered\n    };\n\n    isEditing = (record) => {\n        return record._id === this.state.editingKey;\n    };\n\n\n    cancel = () => {\n        const {dataSource} = this.state;\n        this.setState({\n            dataSource: dataSource.filter(item => item._id !== Virtual_ID),\n            editingKey : ''\n        });\n    };\n\n    save = async key => {\n        try {\n            const row = await this.formRef.current.validateFields();\n            const newData = [...this.state.dataSource];\n            const index = newData.findIndex(item =>  item._id === key);\n\n            if (index > -1) {\n                const item = newData[index];\n                newData.splice(index, 1, { ...item, ...row });\n\n                if(key === Virtual_ID){\n                    this.handleAdd(newData[index]);\n                } else{\n                    this.handleSave(newData[index]);\n                }\n                this.setState({\n                    dataSource : newData,\n                    editingKey: ''\n                });\n            } else {\n                this.setState({\n                    dataSource : newData,\n                    editingKey: ''\n                });\n\n            }\n        } catch (errInfo) {\n            console.log('Validate Failed:', errInfo);\n        }\n    };\n\n    handleSave = item => {\n        const {dataSource} = this.state;\n        fetch(`http://lmapp.us-east-2.elasticbeanstalk.com/api/locations/${item._id}`, {\n            headers:{\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            method: 'PUT',\n            body: JSON.stringify({\n                name: item.name,\n                email: item.email,\n                defaultRunningTime: item.defaultRunningTime,\n                defaultReservationExpireTime: item.defaultReservationExpireTime,\n                defaultPickupTime: item.defaultPickupTime,\n            }),\n        })\n            .then((response) => {\n                return response.json();\n                //throw new Error(response.msg);\n            })\n            .then((res) => {\n                return (res.isSuccess)\n            })\n            .catch((err) => console.log(err))\n    };\n\n    handleDelete = _id => {\n        const {count, dataSource} = this.state;\n        // this.setState({\n        //     dataSource: dataSource.filter(item => item._id !== _id),\n        // });\n\n        fetch(`http://lmapp.us-east-2.elasticbeanstalk.com/api/locations/${_id}`, {\n            headers:{\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            method: 'DELETE',\n        })\n            .then((response) => {\n                return response.json();\n                //throw new Error(response.msg);\n            })\n            .then(() => {\n                return this.setState({\n                    dataSource: dataSource.filter(item => item._id !== _id),\n                    count: count - 1,\n                });\n            })\n            .catch((err) => console.log(err))\n    };\n\n    onAdd = () => {\n        const {count, dataSource} = this.state;\n\n        const newData = {\n            name:\"\",\n            email:\"\",\n            defaultRunningTime: \"\",\n            defaultReservationExpireTime: \"\",\n            defaultPickupTime: \"\",\n            _id : Virtual_ID\n        };\n\n        this.setState({\n            dataSource:[...dataSource, newData],\n            count: count + 1,\n        });\n        this.edit(newData)\n    };\n\n    handleAdd = (newData) => {\n        fetch(\"http://lmapp.us-east-2.elasticbeanstalk.com/api/locations\", {\n            headers:{\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            method: 'POST',\n            body: JSON.stringify({\n                name: newData.name,\n                email: newData.email,\n                defaultRunningTime: newData.defaultRunningTime,\n                defaultReservationExpireTime: newData.defaultReservationExpireTime,\n                defaultPickupTime: newData.defaultPickupTime,\n            }),\n        })\n            .then((response) => {\n                //console.log(response.text());\n                return response.json();\n                //throw new Error(response.msg);\n            })\n            .then((res) => {\n                if(res.isSuccess)\n                    newData._id = res.id\n                return res.isSuccess\n            })\n            .catch((err) => console.log(err))\n    }\n\n\n\n\n    render() {\n        const { dataSource } = this.state;\n\n        const mergedColumns = this.columns.map(col => {\n            if (!col.editable) {\n                return col;\n            }\n            return {\n                ...col,\n                onCell: record => ({\n                    record,\n                    inputType: col.dataIndex === 'name' || col.dataIndex ==='email' ? 'text' : 'number',\n                    dataIndex: col.dataIndex,\n                    title: col.title,\n                    editing: this.isEditing(record),\n                }),\n            };\n        });\n\n        //console.log(this.state.count)\n        return (\n            <div>\n                <Button disabled={this.state.editingKey !== ''} onClick={this.onAdd}\n                        type=\"primary\"\n                        style={{\n                            marginTop:16,\n                            marginBottom: 16\n                        }}>\n                    Add a New Location\n                </Button>\n                <Form ref={this.formRef} component={false}>\n                    <Table\n                        components={{\n                            body: {\n                                cell: EditableCell,\n                            },\n                        }}\n                        bordered\n                        rowKey = \"_id\"\n                        dataSource={dataSource}\n                        columns={mergedColumns}\n                        rowClassName=\"editable-row\"\n                        pagination={{\n                            onChange: this.cancel,\n                        }}\n                    />\n                </Form>\n            </div>\n\n        );\n    };\n\n}\nexport default Location;","import React, {Component} from 'react';\nimport Box from './Box';\nimport List from './List';\nimport {Menu} from \"antd\";\nimport { MailOutlined, AppstoreOutlined, SettingOutlined } from '@ant-design/icons';\nimport SubMenu from \"antd/es/menu/SubMenu\";\nimport User from \"./User\";\nimport Location from \"./Location\";\n\nclass Machine extends Component {\n    render() {\n        const { data } = this.props;\n        return (\n            <>\n                <List data={data}/>\n                <Box data={data}/>\n            </>\n        );\n    }\n}\n\nexport default Machine;","export const API_ROOT = 'http://lmapp.us-east-2.elasticbeanstalk.com/api';\nexport const TOKEN_KEY = 'TOKEN_KEY';\n\n//export const API_ROOT = 'http://localhost:3001/api';","import React, {Component} from 'react';\nimport { Icon } from 'antd';\n\nclass TopBar extends Component {\n    render() {\n        return (\n            <header className=\"App-header\">\n                <span className=\"App-title\">Sparkling Laundry Management</span>\n\n                {this.props.isLoggedIn ?\n                    <a className=\"logout\" onClick={this.props.handleLogout} >\n                        <Icon type=\"logout\"/>{' '}Logout\n                    </a> : null }\n\n            </header>\n        );\n    }\n}\n\nexport default TopBar;","\nimport React, {Component} from 'react';\nimport { Form, Icon, Input, Button, message} from 'antd';\nimport { Link } from 'react-router-dom';\nimport { API_ROOT } from '../constants';\n\nclass NormalLoginForm extends Component {\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n                fetch(`${API_ROOT}/admin/login`, {\n                    headers:{\n                        'Accept': 'application/json',\n                        'Content-Type': 'application/json'\n                    },\n                    method: 'POST',\n                    body: JSON.stringify({\n                        username: values.username,\n                        password: values.password,\n                    }),\n                })\n                    .then((response) =>{\n                        //console.log(response)\n                        if (response.ok) {\n                            return response.json();\n                        } else {\n                            throw new Error(\"ERROR\");\n                        }\n                    })\n                    .then((data) => {\n                        //console.log(data.token);\n                        this.props.handleLoginSucceed(data.token);   // data is token\n                        message.success('Login succeed!');\n\n                        //step4: 登录成功，保存token -> 用于实现持久登录\n                    })\n                    .catch((err) => {\n                        console.log(err);\n                        message.error('Login failed.');\n                    });\n            }\n        });\n    };\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        return (\n            <Form onSubmit={this.handleSubmit} className=\"login-form\">\n                <p className= \"login-title\">Admin Login\n                </p>\n                <Form.Item>\n                    {getFieldDecorator('username', {\n                        rules: [{ required: true, message: 'Please input your username!' }],\n                    })(\n                        <Input\n                            prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                            placeholder=\"Username\"\n                        />,\n                    )}\n                </Form.Item>\n                <Form.Item>\n                    {getFieldDecorator('password', {\n                        rules: [{ required: true, message: 'Please input your Password!' }],\n                    })(\n                        <Input\n                            prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                            type=\"password\"\n                            placeholder=\"Password\"\n                        />,\n                    )}\n                </Form.Item>\n                <Form.Item>\n                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                        Log in\n                    </Button>\n                </Form.Item>\n            </Form>\n\n        );\n    }\n}\n\nexport const Login = Form.create({ name: 'normal_login' })(NormalLoginForm);\n","import React, {Component} from 'react';\nimport {Menu} from \"antd\";\nimport { MailOutlined, AppstoreOutlined, SettingOutlined } from '@ant-design/icons';\nimport SubMenu from \"antd/es/menu/SubMenu\";\nimport Machine from \"./Machine\"\nimport User from \"./User\";\nimport Location from \"./Location\";\n\nclass Home extends Component {\n    state = {\n        current: 'Machine',\n    };\n\n    handleClick = e => {\n        console.log('click ', e);\n        this.setState({ current: e.key });\n    };\n\n    render() {\n        const { data, user, location } = this.props;\n        const { current } = this.state;\n        //console.log(location)\n        const componentsSwitch = (key) => {\n            switch (key) {\n                case 'Machine':\n                    return (<Machine data={data}/>);\n                case 'User':\n                    return (<User user={user}/>);\n                case 'Location':\n                    return (<Location location={location}/>);\n                default:\n                    return (<Machine data={data}/>);\n            }\n        };\n\n\n        return (\n            <div>\n                <Menu onClick={this.handleClick} selectedKeys={[current]} mode=\"horizontal\">\n                    <Menu.Item key=\"Machine\" icon={<AppstoreOutlined />}> Machine Status</Menu.Item>\n                    <Menu.Item key=\"User\" icon={<AppstoreOutlined />}> User Status</Menu.Item>\n                    <Menu.Item key=\"Location\" icon={<AppstoreOutlined />}> Location </Menu.Item>\n                </Menu>\n                {componentsSwitch(current)}\n\n            </div>\n\n        );\n    }\n}\n\nexport default Home;","import React, {Component} from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { Login } from './Login';\nimport  Home  from './Home';\nclass Main extends Component {\n\n    getLogin = () => {\n        return this.props.isLoggedIn ?\n            <Redirect to=\"/home\"/> : <Login handleLoginSucceed={this.props.handleLoginSucceed}/>;\n    }\n    getMachine = () => {\n        //console.log(this.props.data)\n        return this.props.isLoggedIn ?\n            <Home data={this.props.data}\n            user={this.props.user}\n            location={this.props.location}/> : <Redirect to = \"/login\"/>;\n    }\n\n    render() {\n        return (\n            <div className=\"main\">\n                <Switch>\n                    <Route path=\"/login\" render={this.getLogin}/>\n                    <Route path=\"/home\" render={this.getMachine}/>\n                    <Route render={this.getLogin}/>\n                </Switch>\n                <p className=\"footnote\">Sparkling Laundry Management, Mailing Address: admin@foxmail.com, LMA 2020 Project</p>\n            </div>\n        );\n    }\n}\n\nexport default Main;\n","import React, { Component } from 'react';\nimport Machine from './components/Machine';\nimport User from './components/User';\nimport Location from './components/Location';\nimport { Menu } from 'antd';\nimport { MailOutlined, AppstoreOutlined, SettingOutlined } from '@ant-design/icons';\nimport SubMenu from \"antd/es/menu/SubMenu\";\nimport {TOKEN_KEY} from \"./constants\";\nimport TopBar from \"./components/TopBar\";\nimport Main from \"./components/Main\";\n\n\nclass App extends Component {\n  state = {\n    data: [],\n    //current: 'Machine',\n    user: [],\n    location: [],\n    isLoggedIn: Boolean(localStorage.getItem(TOKEN_KEY)),\n  };\n\n  handleLoginSucceed = (token) => {\n    console.log('token --- ', token)\n    localStorage.setItem(TOKEN_KEY, token)\n    this.setState({ isLoggedIn: true });\n  }\n\n  handleLogout = () => {\n    localStorage.removeItem(TOKEN_KEY);\n    this.setState({ isLoggedIn: false });\n  }\n\n  componentDidMount() {\n    this.getMachineFromDb();\n    this.getUserFromDb();\n    this.getLocationFromDb();\n  }\n\n  componentWillUnmount() {\n  }\n\n\n  // 我们的第一个使用后端api的get方法\n  // 从我们的数据库中获取数据\n  getMachineFromDb = () => {\n    fetch('/api/machines')\n      .then((data) => data.json())\n      .then((res) => this.setState({ data: res.machines}));\n  };\n\n  getUserFromDb = () => {\n    fetch('/api/users')\n        .then((user) => user.json())\n        .then((res) => this.setState({ user: res.users}));\n  };\n\n  getLocationFromDb = () => {\n    fetch('/api/locations')\n        .then((location) => location.json())\n        .then((res) => this.setState({ location: res.locations}));\n  };\n\n  putDataToDB = (message) => {\n    //todo\n  };\n\n  deleteFromDB = (idTodelete) => {\n    //todo\n  };\n\n  updateDB = (idToUpdate, updateToApply) => {\n    //todo\n  };\n\n\n  // handleClick = e => {\n  //   console.log('click ', e);\n  //   this.setState({ current: e.key });\n  // };\n\n  render() {\n    // const { data } = this.state;\n    // const { current } = this.state;\n    // const { user} = this.state;\n    // const { location } = this.state;\n    // const componentsSwitch = (key) => {\n    //   switch (key) {\n    //     case 'Machine':\n    //       return ( <Machine data={data}/>);\n    //     case 'User':\n    //       return (<User user={user}/>);\n    //     case 'Location':\n    //       return (<Location location={location}/>);\n    //     default:\n    //       return ( <Machine data={data}/>);\n    //   }\n    // };\n\n\n    return (\n        <div className=\"App\">\n          <TopBar handleLogout={this.handleLogout}\n                  isLoggedIn={this.state.isLoggedIn}\n          />\n          <Main  handleLoginSucceed={this.handleLoginSucceed}\n                 isLoggedIn={this.state.isLoggedIn}\n                 data={this.state.data}\n                 user={this.state.user}\n                 location={this.state.location}\n          />\n\n        </div>\n      // <>\n      //   <Menu onClick={this.handleClick} selectedKeys={[current]} mode=\"horizontal\">\n      //     <Menu.Item key=\"Machine\" icon={<AppstoreOutlined />}>\n      //       Machine Status\n      //\n      //     </Menu.Item>\n      //     <Menu.Item key=\"User\"  icon={<AppstoreOutlined />}>\n      //       User Status\n      //     </Menu.Item>\n      //     <Menu.Item key=\"Location\"  icon={<AppstoreOutlined />}>\n      //       Location\n      //     </Menu.Item>\n      //   </Menu>\n      //\n      //   {componentsSwitch(current)}\n      //\n      // </>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root')\n);"],"sourceRoot":""}